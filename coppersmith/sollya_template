k1 = ceil(log(F(c))/log(2));
k2 = floor(log(F(c))/log(2));
if (k1 == k2) then {print("rare break point for c, treat by hand\n") > "tay_pol"; quit;};
f=F(x + c)/2^k1;
//hope this fixes normalization problem
//p = p + k1;
//pp = pp + k1;
prec = 500;
TL=taylorform(f,d,0);
tp=TL[0];
//I5=supnorm(tp,f,[-2^(5 - p), 2^(5 - p)],absolute,2^(-5));
//I15=supnorm(tp,f,[-2^(15 - p), 2^(15 - p)],absolute,2^(-5));
//I25=supnorm(tp,f,[-2^(25 - p), 2^(25 - p)],absolute,2^(-5));
I35=supnorm(tp,f,[-2^(21 - p), 2^(21 - p)],absolute,2^(-5));
//I45=supnorm(tp,f,[-2^(45 - p), 2^(45 - p)],absolute,2^(-5));
if (sup(I35) > 2^(-pp - k1 - 1) ) then {print("no radius found") > "tay_pol"; quit;};
x0 = 2^28;
t = -pp - k1 - 1;
//tp=tp(x/2^p);

rtp = 0; 
for i in [|0,...,d|] do {
   temp = round(coeff(tp,i),abs(t)+30,RD);
   rtp = rtp + temp*x^i;
};

ed = abs(exponent(coeff(rtp,d)));

//print(ed) >> "ed_file";
//ed = 370;
//testing a theory
rtp=rtp(x/2^(p));

print(p*d + ed - p - k1, x0, p*d + ed - pp - k1 + 1) > "tay_pol";

//re=supnorm(rtp,f(x/2^p),[-r*2^p,r*2^p],absolute,2^(-pp - k1));
//if (sup(re) > 2^(-pp - k1)) then {print("rtp isn't accurate enough");};
display = powers;
itp = 0;
for i in [|0,...,d|] do {
   temp = coeff(rtp,i);
   temp = temp*2^(p*d + ed);
   print(mantissa(temp),exponent(temp)) >> "tay_pol";
   itp = itp + temp*x^i;
};
